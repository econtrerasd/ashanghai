1     options():cursor off 5     rem "Basic shanghai game by econtreras"10    cls :bitmap on :bitmap clear 0:print "Loading Assets";20    pokel $D00D,$45306030    print ".";:bload "ashanghai/shangai.bspr",$3000040    print ".";:loadpalette("default",0)50    print ".";:loadfont("angle")60    sprites on 70    cls :layer=0:offx=3:offy=4:dim fig(42):dim ts(2):dim hi(9):dim hi$(9)80    dim tilx(8):dim tily#(8):dim tils#(8):rem "Menu animation variables"85    loadhiscore()90    while 1=1100   menu():cls :bitmap clear 0:sprites off :sprites on 110   print "Loading Level..."120   bload "ashanghai/"+a$+".sha",$7D00130   print "Analizying Layout...":drawfield(0)140   setupgame()150   cls :drawfield(1)160   maingame():?$D6E0=0170   if numtile>0 then gameend()180   wend 190   goto 90990   end 999   '	"Reshuffle routine"1000  proc reshufle()1010  for c=15 to 220:line color 0 from 0,c to 319,c:next 1020  a$="Reshufling Tiles..."1030  text a$ color 2 to 93,103:text a$ color 245 to 90,1001040  numtile2=01050  for lay=0 to 41060  for r=0 to 71070  for c=0 to 131080  a=peek($7D00+c+r*14+lay*112)1090  if a>01100  numtile2=numtile2+11110  fig(a-1)=fig(a-1)+11120  poke $7D00+c+r*14+lay*112,1:rem "remove tile from playfield"1130  endif 1140  next :sound 1,10,2,31150  next 1160  next 1170  for c=0 to 5000:next 1180  for c=80 to 120:line color 0 from 0,c to 319,c:next 1190  drawfield(1)1200  endproc 1249  '	"Draw Tile at row,col,layer position"1250  proc drawtile(img,row,col,lay)1260  if img=14 then img=441270  if img=28 then img=451280  if img=42 then img=461290  x=col*20:y=row*24:xo=lay*offx:yo=lay*offy1300  image img dim 1 to x-xo,y-yo1310  endproc 1349  '	"MemCopy routine from rect area to rect area"1350  proc rectdma(src,dst,x1,y1,ss,sd)1360  ?1=01370  ?$DF00=3:rem "DMA 2D"1380  pokel $DF04,src1390  pokel $DF08,dst1400  pokew $DF0C,x1:rem "X width"1410  pokew $DF0E,y1:rem "Y width"1420  pokew $DF10,ss:rem "source stride"1430  pokew $DF12,sd:rem "dest stride"1440  ?$DF00=131:rem "Start DMA transfer"1450  while ?$DF01=128:wend 1460  ?$DF00=0:rem "Turn off DMA"1470  endproc 1479  '	"Poke to higher memory Routine"1480  proc xpeek(addr)1490  local block:block=addr\8192:local prevblock1500  local offset:offset=addr&$1FFF1510  ?0=179:prevblock=?$E:?$E=block:?1=41520  peekvalue=peek($C000+offset)1530  ?1=0:?$E=prevblock1540  endproc 1599  '	"Load palette from disk"1600  proc loadpalette(name$,lut)1610  a$="ashanghai/"+name$+".pal"1620  try bload a$,$7800 to err1630  if err<>0 then print a$+" not found":end 1640  ?1=11650  for c=0 to 1023:?($D000+lut*$400+c)=?($7800+c):next 1660  ?1=01670  endproc 1699  '	"Draw or analyze playfield from memory"1700  proc drawfield(draw):rem "draw=0 count tiles, 1 draw field, 2 demo field"1710  bitmap on :bitmap clear 0:numtile=0:sprites on 1715  if draw=2 then offx=3:offy=41720  for lay=0 to 41730  for r=0 to 71740  for c=0 to 131750  a=peek($7D00+c+r*14+lay*112)1760  if a>01770  numtile=numtile+11780  if draw>=11790  rem "brute force distribution of tiles"1800  rt=random(43)1805  if draw=11810  while fig(rt)=0:rt=random(43):wend :fig(rt)=fig(rt)-11815  endif 1820  drawtile(rt,r+1,c+1,lay):poke $7D00+c+r*14+lay*112,rt+11835  endif 1840  endif 1850  next :if draw=1 then sound 1,10,2,31860  next 1870  next 1880  if draw>=11890  a$="Bonus:":text a$ color 2 to 4,4:text a$ color 245 to 1,11900  a$="Tiles Left:":text a$ color 2 to 184,4:text a$ color 245 to 181,11910  a$=str$(numtile):text a$ color 2 to 284,4:text a$ color 245 to 280,11920  a$="Score:":text a$ color 2 to 4,230:text a$ color 245 to 1,2261930  a$="Reshufles:":text a$ color 2 to 184,230:text a$ color 245 to 181,2261940  a$=str$(shufles):text a$ color 2 to 284,230:text a$ color 245 to 280,2261950  endif 1960  endproc 1999  '	"Show all tiles in screen"2000  proc showtiles()2010  bitmap clear 02020  for r=0 to 42030  for c=0 to 82040  drawtile(r*9+c,r+1,c+1,0)2050  next 2060  next 2070  endproc 2099  '	"Read playfield Data from Data statements"2100  proc readfield()2110  numtile=02120  for lay=0 to 42130  for r=1 to 82140  for c=1 to 142150  read a2160  poke $7D00+numtile,a2170  numtile=numtile+12180  next 2190  next 2200  next 2210  print numtile2220  endproc 2229  '	"Save playfield data to file"2250  proc savefield(a$)2260  bsave "ashanghai/"+a$+".sha",$7D00,5602270  print "saved "+a$+".sha"2280  endproc 2289  '	"Identify Tile selected with mouse click"2290  proc tileloc(mx,my)2300  tilelay=4:found=02310  while (tilelay>=0)&(found=0)2320  t=0:xtile=(mx-20+(offx*tilelay))\202330  ytile=(my-24+(offy*tilelay))\242340  if (xtile>=0)&(ytile>=0):rem "check Only valid tiles positions"2345  if (xtile<=13)&(ytile<=7)2350  t=peek($7D00+xtile+(ytile*14)+tilelay*112)2360  if t<>0 then found=12365  endif 2370  endif 2380  if found=0 then tilelay=tilelay-12390  wend 2400  if found2410  for l=tilelay to 42420  t=peek($7D00+xtile+ytile*14+l*112):if t<>0 then maxl=l:ts(s)=t2430  next 2440  coordx=((xtile+1)*20)-(maxl*offx)2450  coordy=((ytile+1)*24)-(maxl*offy)2460  rem "print ts(s)"2470  validatetile(xtile,ytile,maxl)2480  if vt=1:s=s+1:sprite s image 43 to coordx+12,coordy+122490  if s=1 then xtile0=xtile:ytile0=ytile:tilelay0=maxl2500  else :sound 1,900,8,10:endif 2510  endif 2520  endproc 2599  '	"Main gameplay loop"2600  proc maingame()2610  poke $D6E2,100:pokew $D6E4,1002620  dx=0:dy=0:dz=1:lmb=0:mmb=0:rmb=0:s=0:gameover=02630  ?$D6E0=1:rem "Enablemouse":event1=02640  while gameover=02650  mdelta dx,dy,dz,lmb,mmb,rmb2660  mouse tx,ty,tz,lmb,rmb,mmb2670  pokew $D6E2,peekw($D6E2)+dx:pokew $D6E4,peekw($D6E4)+dy2680  if peekw($D6E2)>639 then pokew $D6E2,6392690  if peekw($D6E4)>479 then pokew $D6E4,4792700  mx=peekw($D6E2):my=peekw($D6E4)2710  if lmb<>0 then mx=mx\2:my=my\2:tileloc(mx,my)2720  while lmb<>02730  mouse tx,ty,tz,lmb,mmb,rmb2740  wend 2750  if s=1 then sx=xtile:sy=ytile:sl=tilelay2760  if s=2:s=0:pairscore():sprite 1 off :sprite 2 off 2765  a$="Tiles Left:":text a$ color 2 to 184,4:text a$ color 245 to 181,12770  a$=right$("000"+str$(numtile),3):rect color 0 from 280,1 to 319,102780  text a$ color 2 to 284,4:text a$ color 245 to 280,1:endif 2790  if bonus>1000:shufles=shufles+1:bonus=bonus-10002800  for c=1 to 5:sound 1,500,5,-10:next 2805  rect solid color 0 from 270,220 to 319,2392810  a$=str$(shufles):text a$ color 2 to 284,230:text a$ color 245 to 280,2262820  endif 2830  if event(event1,60) if bonus>0 then bonus=bonus-12840  rect solid colour 0 from 65,0 to 95,122850  a$=right$("000"+str$(bonus),3):text a$ colour 2 to 68,42860  text a$ colour 245 to 65,12870  endif 2880  if rmb<>02890  while rmb<>0:mouse tx,ty,tz,lmb,mmb,rmb:wend 2900  if shufles>=1:shufles=shufles-1:reshufle():else :gameover=1:endif 2920  endif 2925  if numtile=0 then gameover=1:?$D6E0=0:gamewon()2930  wend 2940  endproc 2999  '	"Create a new random layout with current playfield in memory"3000  proc setupgame()3010  print "Shuffling tiles...":rem "setup pairs of tiles for game"3020  nt=numtile\84:for c=0 to 41:fig(c)=2*nt:next 3030  nt=(numtile%84)\23040  for c=0 to nt-1:fig(c)=fig(c)+2:next 3050  score=0:shufles=33060  endproc 3069  '	"Validate if selected tile is a valid move"3070  proc validatetile(xtile,ytile,tilelay)3080  vt=03090  if ((xtile=0)^(xtile=13))<>0:vt=1:else 3100  t1=peek($7D00-1+xtile+(ytile*14)+tilelay*112)3110  t2=peek($7D00+1+xtile+(ytile*14)+tilelay*112)3120  if t1*t2=0 then vt=13130  endif 3140  endproc 3199  '	"Check if selected tiles are valid for Scoring"3200  proc pairscore()3210  match=03220  if (xtile=xtile0)&(ytile=ytile0):sound 1,800,6,5:else 3230  if ts(0)=ts(1) then match=13240  rem "if ts(0)=31 then match=1"3250  rem "if ts(1)=31 then match=1"3260  if (ts(0)>=36)&(ts(0)<=39)3270  if (ts(1)>=36)&(ts(1)<=39)3280  match=13290  endif 3300  endif 3310  if (ts(0)>=40)&(ts(0)<=43)3320  if (ts(1)>=40)&(ts(1)<=43)3330  match=13340  endif 3350  endif 3360  if match=13370  numtile=numtile-23380  for d=0 to 5:sound 1,100-10*d,2,-1:sound 2,200-20*d,2:next 3390  poke $7D00+xtile0+ytile0*14+tilelay0*112,0:rem "remove 1st tile"3400  redraw(xtile0,ytile0,tilelay0)3410  for d=0 to 5:sound 1,100-10*d,2,-1:sound 2,200-20*d,2:next 3420  poke $7D00+xtile+ytile*14+maxl*112,0:rem "remove 2nd tile"3430  redraw(xtile,ytile,maxl):bonus=bonus+btime3440  score=score+20:a$=right$("000"+str$(score),5)3450  rect solid colour 0 from 65,226 to 115,2393460  text a$ colour 2 to 68,230:text a$ colour 245 to 65,2263470  endif 3480  if match=0 then sound 1,800,6,53490  endif 3500  endproc 3699  '	"Redraw screen section after removing tile"3700  proc redraw(tx,ty,tl)3710  memcopy $10000+ty*7680+(tx+1)*20+24 rect 20,72 by 320 to $400003720  memcopy $10000+ty*7680+(tx-2)*20+24 rect 20,72 by 320 to $410003730  memcopy $10000+(ty+2)*7680+(tx-1)*20+23 rect 60,24 by 320 to $420003735  memcopy $10000+(ty-1)*7680+(tx-1)*20+23 rect 60,24 by 320 to $430003740  rect solid color 0 from (tx-1)*20+23,ty*24 to (tx+1)*20+23,(ty+2)*243750  for l=0 to 43760  for r=ty-1 to ty+13770  for c=tx-1 to tx+13780  if (c>=0)&(c<=13)3790  if (r>=0)&(r<=7)3800  rt=peek($7D00+c+r*14+l*112)3810  if rt<>0 then drawtile(rt-1,r+1,c+1,l)3820  endif 3830  endif 3840  next 3850  next 3860  next 3870  memcopy $40000 rect 20,72 by 320 to $10000+ty*7680+(tx+1)*20+243880  memcopy $41000 rect 20,72 by 320 to $10000+ty*7680+(tx-2)*20+243890  memcopy $42000 rect 60,24 by 320 to $10000+(ty+2)*7680+(tx-1)*20+233895  memcopy $43000 rect 60,24 by 320 to $10000+(ty-1)*7680+(tx-1)*20+233900  endproc 3999  '	"Show all playfield layers in character mode"4000  proc showfield()4010  cls 4020  for l=0 to 4:for r=0 to 7:for c=0 to 134030  print right$("00"+str$(peek($7D00+c+r*14+l*112)),2);"|";4040  next :print :next :print :print :next 4050  endproc 4099  '	"Load Font Routine"4100  proc loadfont(a$)4110  a$="ashanghai/"+a$+".font":try bload a$,$7800 to ec4120  if ec=04130  ?1=14140  for c=0 to 20474150  ?($C000+c)=?($7800+c)4160  next 4170  print "Font ";a$;" succesfully loaded!"4180  ?1=04190  else 4200  print "File ";a$;" could not be loaded.."4210  endif 4240  endproc 4299  '	"Main game menu"4300  proc menu()4310  cls :bitmap clear 0:sprites off :opt=0:sprites on 4320  ev=0:screen=24330  while opt=04340  if event(ev,1200)4350  if screen=0:screen=1:showoptions()4360  else 4370  if screen=1:screen=2:showinstruc():sprites on 4375  else screen=0:showhiscore():sprites on 4377  endif 4380  endif 4390  endif 4500  k=inkey()4510  if k=49 then a$="fortress":opt=1:btime=30:bonus=1004511  if k=50 then a$="islands":opt=1:btime=30:bonus=1004512  if k=51 then a$="turtle":opt=1:btime=30:bonus=1004513  if k=52 then a$="bridge":opt=1:btime=30:bonus=1004520  if k=113 then opt=1:exitroutine()4540  for c=0 to 8:tily#(c)=tily#(c)+tils#(c)4550  sprite c to tilx(c),int(tily#(c))4560  if int(tily#(c))>=2524570  tilx(c)=random(35)+c*35:tily#(c)=0.0:tils#(c)=rnd(1)*4+0.54580  sprite c image random(43):?($D900+c*8)=414590  endif 4600  next 4610  wend 4620  endproc 4699  '	"Quit Program routine"4700  proc exitroutine()4710  bitmap clear 0:sprites off :bitmap off 4720  cls :print "Thank you for playing Super Shanghai!"4730  cursor on :end 4740  endproc 4799  '	"Shows game winning sequence!"4800  proc gamewon()4805  bitmap on 4810  a$="Board Cleared!":text a$ color 2 to 113,1034815  text a$ color 245 to 110,1004820  for c=0 to 4000:next 4825  a$="Adding Bonus to Score"4830  text a$ color 2 to 83,123:text a$ color 245 to 80,1204840  while bonus>04850  score=score+10:bonus=bonus-10:if bonus<0 then bonus=04860  rect solid colour 0 from 65,0 to 95,124870  a$=right$("000"+str$(bonus),3):text a$ colour 2 to 68,44880  text a$ colour 245 to 65,14890  a$=right$("000"+str$(score),5)4900  rect solid colour 0 from 65,226 to 115,2394910  text a$ colour 2 to 68,230:text a$ colour 245 to 65,2264920  sound 2,200,2,-24930  wend 4940  a$="Remaining Reshuffles x 1000 = "+str$(shufles*1000)4950  text a$ color 2 to 43,143:text a$ color 245 to 40,1404955  for c=0 to 5000:next 4960  if shufles>04965  bonus=04970  while shufles>04980  bonus=bonus+1000:shufles=shufles-14985  rect solid color 0 from 278,226 to 319,2364990  a$=str$(shufles):text a$ color 2 to 284,230:text a$ color 245 to 280,2265000  a$=right$("0000"+str$(bonus),4)5005  rect solid color 0 from 270,140 to 319,1505010  text a$ color 2 to 285,143:text a$ color 245 to 282,1405020  sound 2,800,10,-20:for c=1 to 4000:next 5030  wend 5040  for c=0 to 10000:next 5050  while bonus>05060  bonus=bonus-20:score=score+205070  rect solid color 0 from 270,140 to 319,1605080  a$=right$("0000"+str$(bonus),4)5090  text a$ color 2 to 285,143:text a$ color 245 to 282,1405110  a$=right$("000"+str$(score),5)5120  rect solid colour 0 from 65,226 to 115,2395130  text a$ colour 2 to 68,230:text a$ colour 245 to 65,2265140  sound 2,200,2,-25150  wend 5160  endif 5170  a$="Press SpaceBar to Finish"5180  text a$ color 2 to 73,163:text a$ color 245 to 70,1605190  k=0:while k<>32:k=inkey():wend 5195  sprites on 5200  for c=0 to 155210  sprite c image random(42) to c*20+12,125220  next 5230  for d=0 to 2395240  line color 0 from 0,d to 319,d5260  for c=0 to 155270  sprite c to c*20+12,d+115280  next 5290  next 5300  sprites off 5305  addhiscore(score)5310  endproc 5399  '	"Show main attract screen"5400  proc showoptions()5410  cls :bitmap clear 0:sprites off :opt=0:sprites on 5415  print "v1.1"5420  a$="Arcade Shanghai":text a$ color 2 dim 2 to 40+5,20+55430  text a$ color 242 dim 2 to 40,205440  a$="By Ernesto Contreras"5450  text a$ color 2 dim 1 to 80,40+35460  text a$ color 6 dim 1 to 80,405470  a$="Foenix Game Jam - April 2025"5480  text a$ color 2 dim 1 to 45,210+35490  text a$ color 4 dim 1 to 45,2105500  a$="Select Puzzle (1-4), Q to Quit"5510  text a$ color 2 dim 1 to 40+3,70+35520  text a$ color 246 dim 1 to 40,705530  a$="1. Fortress"5540  text a$ color 2 dim 1 to 40+3,90+35550  text a$ color 246 dim 1 to 40,905560  a$="2. Islands"5570  text a$ color 2 dim 1 to 40+3,110+35580  text a$ color 246 dim 1 to 40,1105590  a$="3. Turtle"5600  text a$ color 2 dim 1 to 40+3,130+35610  text a$ color 246 dim 1 to 40,1305620  a$="4. Bridge"5630  text a$ color 2 dim 1 to 40+3,150+35640  text a$ color 246 dim 1 to 40,1505670  for c=0 to 8:tils#(c)=rnd(1)*4+0.5:tily#(c)=0.0:tilx(c)=random(35)+c*355680  sprite c image random(43) to tilx(c),int(tily#(c))5690  poke $D900+c*8,41:next :rem "set sprites in layer 2"5695  endproc 5699  '	"Show instructions screen"5700  proc showinstruc()5710  cls :bitmap on :bitmap clear 0:sprites off 5720  a$="Arcade Shanghai":text a$ color 2 dim 2 to 40+5,20+55730  text a$ color 242 dim 2 to 40,205740  a$="Instructions":text a$ color 2 dim 1 to 113,535750  text a$ color 7 to 110,505760  a$="1. Use your mouse button to select"5765  text a$ color 2 dim 1 to 23,73:text a$ color 42 to 20,705770  a$="   tiles to remove"5775  text a$ color 2 dim 1 to 23,83:text a$ color 42 to 20,805780  a$="2. Selected tiles figure should"5785  text a$ color 2 to 23,93:text a$ color 43 to 20,905790  a$="   match to be removed"5795  text a$ color 2 to 23,103:text a$ color 43 to 20,1005800  a$="3. Any Flower figure tiles can"5805  text a$ color 2 to 23,113:text a$ color 44 to 20,1105810  a$="   match with other Flowers"5815  text a$ color 2 to 23,123:text a$ color 44 to 20,1205820  a$="4. Any Season tile can be matched"5825  text a$ color 2 to 23,133:text a$ color 45 to 20,1305830  a$="   with any other season"5835  text a$ color 2 to 23,143:text a$ color 45 to 20,1405840  a$="5. You can reshufle the board"5845  text a$ color 2 to 23,153:text a$ color 46 to 20,1505850  a$="   with the alt. mouse button"5855  text a$ color 2 to 23,163:text a$ color 46 to 20,1605860  a$="6. You win the game when you"5865  text a$ color 2 to 23,173:text a$ color 47 to 20,1705870  a$="   remove all tiles"5875  text a$ color 2 to 23,183:text a$ color 47 to 20,1805880  a$="7. You lose when you run"5885  text a$ color 2 to 23,193:text a$ color 7 to 20,1905890  a$="   out of reshufles"5895  text a$ color 2 to 23,203:text a$ color 7 to 20,2005900  eventm=05910  endproc 5999  '	"Show Lose Game sequence"6000  proc gameend()6010  a$="Game over"6020  for c=1 to 3:text a$ color 2 dim 2 to 90+c,100+c:next 6030  text a$ color 245 dim 2 to 90,1006040  for c=120 to 150:line color 0 from 0,c to 319,c:next 6060  a$="Press spacebar to end"6070  text a$ color 2 dim 1 to 78,133:text a$ color 245 to 75,1306080  k=0:while k=0:k=inkey():wend 6090  sprites on 6100  for c=0 to 156110  sprite c image random(42) to c*20+12,126120  next 6130  for d=0 to 2396140  line color 0 from 0,d to 319,d6160  for c=0 to 156170  sprite c to c*20+12,d+116180  next 6190  next 6200  sprites off 6210  endproc 6299  '	"Show Hiscores in attract mode"6300  proc showhiscore()6310  cls :bitmap clear 0:sprites off :opt=0:sprites on 6320  a$="Arcade Shanghai":text a$ color 2 dim 2 to 40+5,20+56330  text a$ color 242 dim 2 to 40,206340  a$="Top Winners"6350  text a$ color 2 dim 1 to 110+3,50+36360  text a$ color 6 dim 1 to 110,506370  for c=0 to 96375  a$=right$("  "+str$(c+1),2)+" "+hi$(c)6380  text a$ color 2 dim 1 to 103,73+c*106390  text a$ color 240+c dim 1 to 100,70+c*106400  a$=right$("00000"+str$(hi(c)),5)6410  text a$ color 2 dim 1 to 163,73+c*106420  text a$ color 240+c dim 1 to 160,70+c*106430  next 6500  for c=0 to 8:tils#(c)=rnd(1)*4+0.5:tily#(c)=0.0:tilx(c)=random(35)+c*356510  sprite c image random(43) to tilx(c),int(tily#(c))6520  poke $D900+c*8,41:next :rem "set sprites in layer 2"6590  endproc 6599  '	"Load Hiscore Table or set default"6600  proc loadhiscore()6610  try bload "ashanghai/ashanghai.hi",$28000 to ec6620  if ec=06630  addr=$280006640  for c=0 to 96650  xpeek(addr):hi(c)=peekvalue*256:xpeek(addr+1):hi(c)=hi(c)+peekvalue6660  xpeek(addr+2):a$=chr$(peekvalue)6670  xpeek(addr+3):a$=a$+chr$(peekvalue)6680  xpeek(addr+4):a$=a$+chr$(peekvalue):hi$(c)=a$6690  addr=addr+56700  next 6710  else 6720  hi$(0)="NO ":hi(0)=10006725  hi$(1)="TOP":hi(1)=9006730  hi$(2)="DOG":hi(2)=8006740  hi$(3)="YET":hi(3)=7006745  hi$(4)="...":hi(4)=6006750  hi$(5)="TRY":hi(5)=5006755  hi$(6)="TO ":hi(6)=4006760  hi$(7)="WIN":hi(7)=3006765  hi$(8)="NOW":hi(8)=2006770  hi$(9)="...":hi(9)=1006780  endif 6790  endproc 6799  '	"Capture Hiscore Initials"6800  proc addhiscore(score)6805  sprites on :c$=""6810  bitmap on :bitmap clear 0:rem "Verify if reached a HiScore"6820  if score>hi(9)6830  a$="You made a HiScore!"6840  text a$ dim 1 color 2 to 93,336850  text a$ dim 1 color 242 to 90,306860  a$=right$("0000"+str$(score),4)6870  text a$ dim 3 color 2 to 113,636880  text a$ dim 3 color 245 to 110,606890  a$="Type Initials, Enter to end"6900  text a$ dim 1 color 2 to 53,1036910  text a$ dim 1 color 242 to 50,1006915  a$="":sprite 0 image 43 to 132,1426920  while c$<>chr$(13)6930  c$="":while c$="":c$=inkey$():wend 6935  if asc(c$)<>136940  if asc(c$)=86950  if len(a$)>0:a$=left$(a$,len(a$)-1)6955  rect solid color 0 from 120,130 to 200,1606957  text a$ dim 3 color 2 to 123,1336958  text a$ dim 3 color 245 to 120,1306960  else sound 1,800,10,2 endif 6970  else 6975  if len(a$)<36980  a$=a$+c$:rect solid color 0 from 120,130 to 200,1606990  text a$ dim 3 color 2 to 123,1336995  text a$ dim 3 color 245 to 120,1307000  else 7010  sound 1,800,10,27020  endif 7030  endif 7040  if len(a$)<3:img=437050  sprites on :sprite 0 image img to 132+(len(a$))*24,1427060  else 7070  img=27:sprite 0 image img to 132+3*24,1427080  endif 7085  else sprite 0 image 277086  endif 7090  wend 7095  hi(9)=score:hi$(9)=left$(a$+"   ",3)7100  endif 7110  sprite 0 off 7120  sorthiscore()7130  savehiscore()7140  endproc 7199  '	"Sort Hiscore Table by Score"7200  proc sorthiscore()7210  for c=0 to 97220  for d=c to 97230  if hi(d)>hi(c)7240  swap=hi(d):hi(d)=hi(c):hi(c)=swap7250  a$=hi$(d):hi$(d)=hi$(c):hi$(c)=a$7260  endif 7270  next 7280  next 7290  endproc 7399  '	"Save HiScores to disk"7400  proc savehiscore()7410  for c=0 to 97420  xpoke($28000+c*5,hi(c)\256)7430  xpoke($28001+c*5,hi(c)%256)7440  xpoke($28002+c*5,asc(left$(hi$(c),1)))7450  xpoke($28003+c*5,asc(mid$(hi$(c),2,1)))7460  xpoke($28004+c*5,asc(right$(hi$(c),1)))7470  next 7480  bsave "ashanghai/ashanghai.hi",$28000,557490  endproc 7999  '	"Change Listing colors"8000  proc options()8010  option 0,2:option 1,14:option 2,7:option 3,14:option 4,128020  option 5,15:option 6,6:option 7,158030  endproc 8099  '	"Routine to poke a value above first 64k"8100  proc xpoke(addr,value)8110  local block:block=addr\8192:local prevblock8120  local offset:offset=addr&$1FFF8130  ?0=179:prevblock=?$E:?$E=block:?1=48140  ?($C000+offset)=value8150  ?1=0:?$E=prevblock8160  endproc 9999  end 10000 rem "playfield data - layer 1"10010 data 0,0,0,0,0,0,0,0,0,0,0,0,0,010020 data 1,1,1,1,1,1,0,1,1,1,1,1,1,110030 data 1,1,1,1,1,0,0,0,1,1,1,1,1,110040 data 1,1,1,1,1,0,0,0,1,1,1,1,1,110050 data 1,1,1,1,1,0,0,0,1,1,1,1,1,110060 data 1,1,1,1,1,0,0,0,1,1,1,1,1,110070 data 1,1,1,1,1,1,0,1,1,1,1,1,1,110080 data 0,0,0,0,0,0,0,0,0,0,0,0,0,010090 rem "playfield data - layer 2"10100 data 0,0,0,0,0,0,0,0,0,0,0,0,0,010110 data 1,1,1,1,1,0,0,0,1,1,1,1,1,010120 data 0,1,1,1,0,0,0,0,0,1,1,1,1,010130 data 0,1,1,1,0,0,0,0,0,1,1,1,1,010140 data 0,1,1,1,0,0,0,0,0,1,1,1,1,010150 data 0,1,1,1,0,0,0,0,0,1,1,1,1,010160 data 1,1,1,1,1,0,0,0,1,1,1,1,1,010170 data 0,0,0,0,0,0,0,0,0,0,0,0,0,010190 rem "playfield data - layer 3"10200 data 0,0,0,0,0,0,0,0,0,0,0,0,0,010210 data 0,1,1,1,0,0,0,0,0,1,1,1,0,010220 data 0,0,0,1,1,0,0,0,1,1,0,0,0,010230 data 0,0,0,1,1,0,0,0,1,1,0,0,0,010240 data 0,0,0,1,1,0,0,0,1,1,0,0,0,010250 data 0,0,0,1,1,0,0,0,1,1,0,0,0,010260 data 0,1,1,1,0,0,0,0,0,1,1,1,0,010270 data 0,0,0,0,0,0,0,0,0,0,0,0,0,010290 rem "playfield data - layer 4"10300 data 0,0,0,0,0,0,0,0,0,0,0,0,0,010310 data 0,0,1,0,0,0,0,0,0,0,1,0,0,010320 data 0,0,0,0,1,1,0,1,1,0,0,0,0,010330 data 0,0,0,0,1,1,0,1,1,0,0,0,0,010340 data 0,0,0,0,1,1,0,1,1,0,0,0,0,010350 data 0,0,0,0,1,1,0,1,1,0,0,0,0,010360 data 0,0,1,0,0,0,0,0,0,0,1,0,0,010370 data 0,0,0,0,0,0,0,0,0,0,0,0,0,010390 rem "playfield data - layer 5"10400 data 0,0,0,0,0,0,0,0,0,0,0,0,0,010410 data 0,0,0,0,0,0,0,0,0,0,0,0,0,010420 data 0,0,0,0,0,1,1,1,0,0,0,0,0,010430 data 0,0,0,0,0,1,1,1,0,0,0,0,0,010440 data 0,0,0,0,0,1,1,1,0,0,0,0,0,010450 data 0,0,0,0,0,1,1,1,0,0,0,0,0,010460 data 0,0,0,0,0,0,0,0,0,0,0,0,0,010470 data 0,0,0,0,0,0,0,0,0,0,0,0,0,0